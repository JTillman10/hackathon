/**
 * Extra large button extensions. Extends `.btn`.
 */
.btn-xlarge {
    padding: 18px 28px;
    font-size: 22px;
    line-height: normal;
    -webkit-border-radius: 8px;
       -moz-border-radius: 8px;
            border-radius: 8px;
}

.btn-sq-lg {
  width: 300px !important;
  height: 300px !important;
  margin: 5px;
}

.btn-sq {
  width: 100px !important;
  height: 100px !important;
  font-size: 10px;
}

.btn-sq-sm {
  width: 50px !important;
  height: 50px !important;
  font-size: 10px;
}

.btn-sq-xs {
  width: 25px !important;
  height: 25px !important;
  padding:2px;
}

.page-header {
  text-align: center;
  text-transform: uppercase;
  font-size: 62px;
  font-weight: 800;
  line-height: 72px;
}

.page-header-small {
  text-align: center;
  font-size: 45px;
  font-weight: 600;
  line-height: 60px;
}

.section-header {
  text-align: center;
  font-size: 60px;
  font-weight: 600;
  line-height: 65px;
}

.container {
  height: 100%;
}

.tile {
  text-align: center;
  display: inline-table;
  width: 300px !important;
}

.progress {
  padding-left: 10px;
}

.gauge {
    position: relative;
}

.gauge--container {
    margin: 0;
    padding: 0;
    position: absolute;
    left: 50%;
    overflow: hidden;
    text-align: center;
    -webkit-transform: translateX(-50%);
       -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
         -o-transform: translateX(-50%);
            transform: translateX(-50%);
}

.gauge--background {
    z-index: 0;
    position: absolute;
    background-color: #DADADA;
    top: 0;
    border-radius: 300px 300px 0 0;
}

.gauge--data {
    z-index: 1;
    position: absolute;
    background-color: #005691;
    margin-left: auto;
    margin-right: auto;
    border-radius: 300px 300px 0 0;
    -webkit-transform-origin: center bottom;
       -moz-transform-origin: center bottom;
        -ms-transform-origin: center bottom;
         -o-transform-origin: center bottom;
            transform-origin: center bottom;
}

.gauge--center {
    z-index: 2;
    position: absolute;
    background-color: #fff;
    margin-right: auto;
    border-radius: 300px 300px 0 0;
}

.gauge--marker {
    z-index: 3;
    background-color: #fff;
    position: absolute;
    width: 1px;
}

.gauge--needle {
    z-index: 4;
    background-color: #333;
    height: 3px;
    position: absolute;
    -webkit-transform-origin: left center;
       -moz-transform-origin: left center;
        -ms-transform-origin: left center;
         -o-transform-origin: left center;
            transform-origin: left center;
}

.gauge--labels {
    display: table;
    margin: 0 auto;
    position: relative;
}

.gauge--label__low {
    display: table-cell;
    text-align: center;
}

.gauge--label__spacer {
    display: table-cell;
}

.gauge--label__high {
    display: table-cell;
    text-align: center;
}

/*
 * Now define the rules that depend on the size of
 * the gauge. We start with sizing for a small mobile
 * device.
 */

.gauge { height: calc(120px + 3em); }
.gauge--container { width: 240px; height: 120px; }
.gauge--marker { height: 120px; left: 119.5px; }
.gauge--background { width: 240px; height: 120px; }
.gauge--center { width: 144px; height: 72px; top: 48px; margin-left: 48px; }
.gauge--data { width: 240px; height: 120px; }
.gauge--needle { left: 120px; top: 117px; width: 120px; }
.gauge--labels { top: 120px; width: 240px; }
.gauge--label__low { width: 48px; }
.gauge--label__spacer { width: 144px; }
.gauge--label__high { width: 48px; }

/*
 * Increase the gauge size slightly on larger viewports.
 */

 @media only screen and (min-width: 400px) {
    .gauge { height: calc(150px + 3em); }
    .gauge--container { width: 300px; height: 150px; }
    .gauge--marker { height: 150px; left: 149.5px; }
    .gauge--background { width: 300px; height: 150px; }
    .gauge--center { width: 180px; height: 90px; top: 60px; margin-left: 60px; }
    .gauge--data { width: 300px; height: 150px; }
    .gauge--needle { left: 150px; top: 147px; width: 150px; }
    .gauge--labels { top: 150px; width: 300px; }
    .gauge--label__low { width: 60px; }
    .gauge--label__spacer { width: 180px; }
    .gauge--label__high { width: 60px; }
}

/*
 * As an option, the `gauge__liveupdate` class can be added
 * to the main gauge element. When this class is present,
 * we add a transition that animates any changes to the gauge
 * value. Currently, the app does not use this option because
 * all the inputs that can change gauge values are present
 * on tab panels that are different from the gauge itself.
 * Therefore, users won't be able to see any gauge changes
 * when they make input changes. The code is available, though,
 * should this change.
 */

.gauge__liveupdate .gauge--data,
.gauge__liveupdate .gauge--needle {
    -webkit-transition: all 1s ease-in-out;
       -moz-transition: all 1s ease-in-out;
        -ms-transition: all 1s ease-in-out;
         -o-transition: all 1s ease-in-out;
            transition: all 1s ease-in-out;
}            

/*
 * For a given gauge value, x, ranging from 0.0 to 1.0, set
 * the `transform: rotate()` property according to the
 * following equation: `-0.5 + 0.5x turns` The default
 * properties below represent an x value of 0.
 */

.gauge--data {
    -webkit-transform: rotate(-.50turn);
       -moz-transform: rotate(-.50turn);
        -ms-transform: rotate(-.50turn);
         -o-transform: rotate(-.50turn);
            transform: rotate(-.50turn);
}

.gauge--needle {
    -webkit-transform: rotate(-.50turn);
       -moz-transform: rotate(-.50turn);
        -ms-transform: rotate(-.50turn);
         -o-transform: rotate(-.50turn);
            transform: rotate(-.50turn);
} 